---
  - name: Set Facts
    set_fact:
      major_version: "{{ lookup('env', 'VERSION').split('.')[0].split('-')[1] }}"
      cacheable: true

  - name: Configure repository
    include_tasks: ../../../../tasks/enable_repo.yml

  - name: Install build dependencies on Debian
    apt:
      name: "{{ packages }}"
      update_cache: yes
      state: latest
    vars:
      packages:
        - libreadline6-dev
        - systemtap-sdt-dev
        - zlib1g-dev
        - libssl-dev
        - libpam0g-dev
        - python3-dev
        - bison
        - flex
        - libipc-run-perl
        - wget
        - libtext-trim-perl
        - gnupg
        - tzdata
        - locales
        - lsb-release
        - apt-utils
        - make
        - gcc
        - gnupg2
        - curl
        - libz-dev
        - liblz4-dev
        - libreadline6-dev

  - name: install Percona Platform for PostgreSQL deb packages
    apt:
      name: "{{ packages }}"
      update_cache: yes
      state: latest
    vars:
      postgres_version: "{{ major_version }}"
      packages:
      - percona-postgresql
      - percona-postgresql-{{ postgres_version }}
      - percona-postgresql-all
      - percona-postgresql-client
      - percona-postgresql-client-{{ postgres_version }}
      - percona-postgresql-common
      - percona-postgresql-contrib
      - percona-postgresql-doc
      - percona-postgresql-doc-{{ postgres_version }}
      - percona-postgresql-plperl-{{ postgres_version }}
      - percona-postgresql-plpython3-{{ postgres_version }}
      - percona-postgresql-pltcl-{{ postgres_version }}
      - percona-postgresql-server-dev-{{ postgres_version }}
      - percona-postgresql-server-dev-all
      - percona-postgresql-{{ postgres_version }}-dbgsym
      - percona-postgresql-client-{{ postgres_version }}-dbgsym
      - percona-postgresql-plperl-{{ postgres_version }}-dbgsym
      - percona-postgresql-plpython3-{{ postgres_version }}-dbgsym
      - percona-postgresql-pltcl-{{ postgres_version }}-dbgsym
    environment:
      PERCONA_TELEMETRY_URL: "https://check-dev.percona.com/v1/telemetry/GenericReport"

  - name: Install pgaudit Debian
    apt:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      postgres_version: "{{ major_version }}"
      packages:
        - percona-postgresql-{{ postgres_version }}-pgaudit
        - percona-postgresql-{{ postgres_version }}-pgaudit-dbgsym
    environment:
      PERCONA_TELEMETRY_URL: "https://check-dev.percona.com/v1/telemetry/GenericReport"

  - name: Install percona-pgaudit{{ postgres_version }}_set_user Debian
    apt:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      postgres_version: "{{ major_version }}"
      packages:
        - percona-pgaudit{{ postgres_version }}-set-user
        - percona-pgaudit{{ postgres_version }}-set-user-dbgsym
    environment:
      PERCONA_TELEMETRY_URL: "https://check-dev.percona.com/v1/telemetry/GenericReport"

  - name: Install pgrepack Debian
    apt:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      postgres_version: "{{ major_version }}"
      packages:
        - percona-postgresql-{{ postgres_version }}-repack
        - percona-postgresql-{{ postgres_version }}-repack-dbgsym
    environment:
      PERCONA_TELEMETRY_URL: "https://check-dev.percona.com/v1/telemetry/GenericReport"

  - name: Install percona-postgis Debian
    apt:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      postgres_version: "{{ major_version }}"
      packages:
        - percona-postgresql-{{ postgres_version }}-postgis-3
        - percona-postgresql-{{ postgres_version }}-postgis-3-scripts
        - percona-postgresql-postgis-scripts
        - percona-postgresql-postgis
        - percona-postgis
    environment:
      PERCONA_TELEMETRY_URL: "https://check-dev.percona.com/v1/telemetry/GenericReport"

  - name: Clone pgvector sources
    git:
      repo: "{{ repo }}"
      version: "{{ version }}"
      dest: /tmp/pgvector
    vars:
      repo: "{{ lookup('env', 'COMPONENT_REPO') }}"
      version: "{{ lookup('env', 'COMPONENT_VERSION') }}"
    become_user: postgres

  - name: Build pgvector from sources
    make:
      chdir: "/tmp/pgvector"
      params:
        USE_PGXS: 1

  - name: Install pgvector Debian/Ubuntu Package
    apt:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      packages:
        - percona-postgresql-{{ major_version }}-pgvector

  - name: Add extensions to postgresql.conf for Debian
    lineinfile:
      path: /etc/postgresql/{{ major_version }}/main/postgresql.conf
      line: shared_preload_libraries = 'pgvector'

  - name: Stop postgresql service for Debian based
    service:
      name: postgresql
      state: stopped

  - name: Start postgresql service for Debian based
    service:
      name: postgresql
      state: started
      enabled: true

  - debug:
      var: results.stdout

  - name: Test pgvector regression
    make:
      target: installcheck
      chdir: "/tmp/pgvector"
      params:
        USE_PGXS: 1
    become_user: postgres
    register: installcheck

  - debug: var=installcheck.stdout_lines

  - name: Test pgvector Tap tests
    make:
      target: prove_installcheck
      chdir: "/tmp/pgvector"
      params:
        USE_PGXS: 1
    become_user: postgres
    register: prove_installcheck

  - debug: var=prove_installcheck.stdout_lines
